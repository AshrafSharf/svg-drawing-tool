/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
var ColorPickerComponent = /** @class */ (function () {
    function ColorPickerComponent() {
    }
    /**
     * @return {?}
     */
    ColorPickerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} colorCode
     * @return {?}
     */
    ColorPickerComponent.prototype.onColorPickerChange = /**
     * @param {?} colorCode
     * @return {?}
     */
    function (colorCode) {
        this.group.get(this.field.name).setValue(colorCode);
    };
    ColorPickerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-color-picker',
                    template: "<div class=\"form-group\" [formGroup]=\"group\">\n    <label>{{field.label}}</label>\n    <input class=\"form-control color-text\" [formControlName]=\"field.name\" [value]=\"field.value\" [(colorPicker)]=\"field.value\" [style.background]=\"field.value\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpOutputFormat]=\"'hex'\" [cpSaveClickOutside]=\"true\"\n        (colorPickerChange)=\"onColorPickerChange($event)\">\n</div>",
                    styles: [".color-text{font-weight:bolder;color:#fff}"]
                },] },
    ];
    /** @nocollapse */
    ColorPickerComponent.ctorParameters = function () { return []; };
    return ColorPickerComponent;
}());
export { ColorPickerComponent };
if (false) {
    /** @type {?} */
    ColorPickerComponent.prototype.field;
    /** @type {?} */
    ColorPickerComponent.prototype.group;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3ItcGlja2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2R5bmFmb3JtLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL2NvbG9yLXBpY2tlci9jb2xvci1waWNrZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBS2xEO0lBYUk7SUFBZ0IsQ0FBQzs7OztJQUVqQix1Q0FBUTs7O0lBQVI7SUFDQSxDQUFDOzs7OztJQUVELGtEQUFtQjs7OztJQUFuQixVQUFvQixTQUFpQjtRQUNqQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN4RCxDQUFDOztnQkFwQkosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLFFBQVEsRUFBRSwrYUFJUDtvQkFDSCxNQUFNLEVBQUUsQ0FBQyw0Q0FBNEMsQ0FBQztpQkFDekQ7Ozs7SUFhRCwyQkFBQztDQUFBLEFBckJELElBcUJDO1NBWlksb0JBQW9COzs7SUFDN0IscUNBQWE7O0lBQ2IscUNBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgRmllbGQgfSBmcm9tICcuLi8uLi9tb2RlbC9maWVsZC5pbnRlcmZhY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FwcC1jb2xvci1waWNrZXInLFxuICAgIHRlbXBsYXRlOiBgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXBcIiBbZm9ybUdyb3VwXT1cImdyb3VwXCI+XG4gICAgPGxhYmVsPnt7ZmllbGQubGFiZWx9fTwvbGFiZWw+XG4gICAgPGlucHV0IGNsYXNzPVwiZm9ybS1jb250cm9sIGNvbG9yLXRleHRcIiBbZm9ybUNvbnRyb2xOYW1lXT1cImZpZWxkLm5hbWVcIiBbdmFsdWVdPVwiZmllbGQudmFsdWVcIiBbKGNvbG9yUGlja2VyKV09XCJmaWVsZC52YWx1ZVwiIFtzdHlsZS5iYWNrZ3JvdW5kXT1cImZpZWxkLnZhbHVlXCIgW2NwT0tCdXR0b25dPVwidHJ1ZVwiIFtjcENhbmNlbEJ1dHRvbl09XCJ0cnVlXCIgW2NwT3V0cHV0Rm9ybWF0XT1cIidoZXgnXCIgW2NwU2F2ZUNsaWNrT3V0c2lkZV09XCJ0cnVlXCJcbiAgICAgICAgKGNvbG9yUGlja2VyQ2hhbmdlKT1cIm9uQ29sb3JQaWNrZXJDaGFuZ2UoJGV2ZW50KVwiPlxuPC9kaXY+YCxcbiAgICBzdHlsZXM6IFtgLmNvbG9yLXRleHR7Zm9udC13ZWlnaHQ6Ym9sZGVyO2NvbG9yOiNmZmZ9YF1cbn0pXG5leHBvcnQgY2xhc3MgQ29sb3JQaWNrZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIGZpZWxkOiBGaWVsZDtcbiAgICBncm91cDogRm9ybUdyb3VwO1xuXG4gICAgY29uc3RydWN0b3IoKSB7IH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgIH1cblxuICAgIG9uQ29sb3JQaWNrZXJDaGFuZ2UoY29sb3JDb2RlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5ncm91cC5nZXQodGhpcy5maWVsZC5uYW1lKS5zZXRWYWx1ZShjb2xvckNvZGUpO1xuICAgIH1cbn1cbiJdfQ==