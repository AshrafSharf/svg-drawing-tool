{"version":3,"file":"dynaform.umd.js.map","sources":["ng://dynaform/lib/controls/checkbox/checkbox.component.ts","ng://dynaform/lib/controls/input/input.component.ts","ng://dynaform/lib/controls/radiobutton/radiobutton.component.ts","ng://dynaform/lib/controls/select/select.component.ts","ng://dynaform/lib/controls/button/button.component.ts","ng://dynaform/lib/controls/color-picker/color-picker.component.ts","ng://dynaform/lib/directives/dynamic-field.directive.ts","ng://dynaform/lib/component/dynamic-form/dynamic-form.component.ts","ng://dynaform/lib/dynaform.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Field } from '../../model/field.interface';\n\n@Component({\n    selector: 'app-checkbox',\n    template: `<div class=\"form-check\" [formGroup]=\"group\">\n    <input [formControlName]=\"field.name\" type=\"checkbox\" class=\"form-check-input mr-2\" />\n    <label>{{field.label}}</label>\n</div>`,\n    styles: [``]\n})\nexport class CheckboxComponent implements OnInit {\n    field: Field;\n    group: FormGroup;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Field } from '../../model/field.interface';\n\n@Component({\n    selector: 'app-input',\n    template: `<div class=\"form-group\" [formGroup]=\"group\">\n    <label>{{field.label}}</label>\n    <input formControlName=\"{{field.name}}\" [type]=\"field.inputType\" class=\"form-control\">\n    <ng-container *ngFor=\"let validation of field.validations;\">\n        <div class=\"text-danger mt-2\" *ngIf=\"group.get(field.name).invalid && (group.get(field.name).touched || group.get(field.name).dirty)\">{{validation.message}}</div>\n    </ng-container>\n</div>`,\n    styles: [``]\n})\nexport class InputComponent implements OnInit {\n    field: Field;\n    group: FormGroup;\n\n    constructor() { }\n\n    ngOnInit() {\n        console.log('inputcomponent : ngoninit');\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Field } from '../../model/field.interface';\n\n@Component({\n    selector: 'app-radiobutton',\n    template: `<div class=\"form-group\" [formGroup]=\"group\">\n    <ng-container *ngFor=\"let item of field.options\">\n        <label class=\"radio-inline mr-2\"><input type=\"radio\" [formControlName]=\"field.name\" [value]=\"item\"> {{item}}</label>\n    </ng-container>\n</div>`,\n    styles: [``]\n})\nexport class RadiobuttonComponent implements OnInit {\n    field: Field;\n    group: FormGroup;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Field } from '../../model/field.interface';\n\n@Component({\n    selector: 'app-select',\n    template: `<div [formGroup]=\"group\">\n    <label>{{field.label}}</label>\n    <select class=\"form-control\" [formControlName]=\"field.name\">\n        <option [value]=\"item\" *ngFor=\"let item of field.options\"> {{item}}</option>\n    </select>\n</div>`,\n    styles: [``]\n})\nexport class SelectComponent implements OnInit {\n    field: Field;\n    group: FormGroup;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\n\nimport { Field } from '../../model/field.interface';\n\n@Component({\n    selector: \"app-button\",\n    template: `<div>\r\n    <button class=\"btn btn-primary\" [formGroup]=\"group\" type=\"submit\">{{field.label}}</button>\r\n</div>`,\n    styles: [``]\n})\nexport class ButtonComponent implements OnInit {\n    field: Field;\n    group: FormGroup;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Field } from '../../model/field.interface';\n\n@Component({\n    selector: 'app-color-picker',\n    template: `<div class=\"form-group\" [formGroup]=\"group\">\n    <label>{{field.label}}</label>\n    <input class=\"form-control color-text\" [formControlName]=\"field.name\" [value]=\"field.value\" [(colorPicker)]=\"field.value\" [style.background]=\"field.value\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpOutputFormat]=\"'hex'\" [cpSaveClickOutside]=\"true\"\n        (colorPickerChange)=\"onColorPickerChange($event)\">\n</div>`,\n    styles: [`.color-text{font-weight:bolder;color:#fff}`]\n})\nexport class ColorPickerComponent implements OnInit {\n    field: Field;\n    group: FormGroup;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    onColorPickerChange(colorCode: string): void {\n        this.group.get(this.field.name).setValue(colorCode);\n    }\n}\n","import { Directive, Input, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { InputComponent } from '../controls/input/input.component';\nimport { SelectComponent } from '../controls/select/select.component';\nimport { RadiobuttonComponent } from '../controls/radiobutton/radiobutton.component';\nimport { CheckboxComponent } from '../controls/checkbox/checkbox.component';\nimport { ColorPickerComponent } from '../controls/color-picker/color-picker.component';\nimport { ButtonComponent } from '../controls/button/button.component';\n\nimport { Field } from '../model/field.interface';\n\nconst controlMapper = {\n    input: InputComponent,\n    select: SelectComponent,\n    radiobutton: RadiobuttonComponent,\n    checkbox: CheckboxComponent,\n    colorpicker: ColorPickerComponent,\n    button: ButtonComponent\n};\n\n@Directive({\n    selector: '[dynamic-field]'\n})\nexport class DynamicFieldDirective {\n    @Input() field: Field;\n    @Input() group: FormGroup;\n\n    componentRef: any;\n\n    constructor(private resolver: ComponentFactoryResolver, private viewContainer: ViewContainerRef) {\n    }\n\n    ngOnInit() {\n        const factory = this.resolver.resolveComponentFactory(controlMapper[this.field.type]);\n        this.componentRef = this.viewContainer.createComponent(factory);\n        this.componentRef.instance.field = this.field;\n        this.componentRef.instance.group = this.group;\n    }\n\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n\nimport { Field } from \"../../model/field.interface\";\n\n@Component({\n    exportAs: \"dynamicForm\",\n    selector: \"dynamic-form\",\n    template: `<form class=\"dynamic-form\" [formGroup]=\"form\" (submit)=\"onSubmit($event)\">\r\n    <ng-container *ngFor=\"let field of fields;\" dynamic-field [field]=\"field\" [group]=\"form\">\r\n    </ng-container>\r\n</form>`,\n    styles: [``]\n})\nexport class DynamicFormComponent implements OnInit, OnChanges {\n    @Input() fields: Field[] = [];\n\n    @Output() submit: EventEmitter<any> = new EventEmitter<any>();\n\n    form: FormGroup;\n\n    get value() {\n        return this.form.value;\n    }\n\n    constructor(private fb: FormBuilder) { }\n\n    ngOnInit() {\n    }\n\n    ngOnChanges() {\n        this.form = this.createFormControls();\n    }\n\n    onSubmit(event: Event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.form.valid) {\n            this.submit.emit(this.form.value);\n        } else {\n            this.validateAllFormFields(this.form);\n        }\n    }\n\n    createFormControls() {\n        const group = this.fb.group({});\n        this.fields.forEach(field => {\n            if (field.type === \"button\") return;\n            const control = this.fb.control(\n                field.value,\n                this.bindValidations(field.validations || [])\n            );\n            group.addControl(field.name, control);\n        });\n        return group;\n    }\n\n    bindValidations(validations: any) {\n        if (validations.length > 0) {\n            const validList = [];\n            validations.forEach(valid => {\n                validList.push(valid.validator);\n            });\n            return Validators.compose(validList);\n        }\n        return null;\n    }\n\n    validateAllFormFields(formGroup: FormGroup) {\n        Object.keys(formGroup.controls).forEach(field => {\n            const control = formGroup.get(field);\n            control.markAsTouched({ onlySelf: true });\n        });\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { NgModule } from '@angular/core';\n\nimport { ColorPickerModule } from 'ngx-color-picker';\n\nimport { CheckboxComponent } from './controls/checkbox/checkbox.component';\nimport { InputComponent } from './controls/input/input.component';\nimport { RadiobuttonComponent } from './controls/radiobutton/radiobutton.component';\nimport { SelectComponent } from './controls/select/select.component';\nimport { ButtonComponent } from './controls/button/button.component';\nimport { ColorPickerComponent } from './controls/color-picker/color-picker.component';\n\nimport { DynamicFieldDirective } from './directives/dynamic-field.directive';\nimport { DynamicFormComponent } from './component/dynamic-form/dynamic-form.component';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ColorPickerModule\n    ],\n    declarations: [\n        DynamicFieldDirective,\n        CheckboxComponent,\n        InputComponent,\n        RadiobuttonComponent,\n        SelectComponent,\n        ButtonComponent,\n        ColorPickerComponent,\n        DynamicFormComponent\n    ],\n    entryComponents: [\n        InputComponent,\n        SelectComponent,\n        CheckboxComponent,\n        RadiobuttonComponent,\n        ColorPickerComponent,\n        ButtonComponent\n    ],\n    exports: [\n        DynamicFieldDirective,\n        DynamicFormComponent\n    ]\n})\nexport class DynaformModule { }\n"],"names":["Component","Directive","ComponentFactoryResolver","ViewContainerRef","Input","EventEmitter","Validators","FormBuilder","Output","NgModule","BrowserModule","FormsModule","ReactiveFormsModule","ColorPickerModule"],"mappings":";;;;;;;;;;AAAA;QAiBI;SAAiB;;;;QAEjB,oCAAQ;;;YAAR;aACC;;oBAfJA,cAAS,SAAC;wBACP,QAAQ,EAAE,cAAc;wBACxB,QAAQ,EAAE,gMAGP;wBACH,MAAM,EAAE,CAAC,EAAE,CAAC;qBACf;;;;QAUD,wBAAC;KAAA;;;;;;ACtBD;QAoBI;SAAiB;;;;QAEjB,iCAAQ;;;YAAR;gBACI,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;aAC5C;;oBAnBJA,cAAS,SAAC;wBACP,QAAQ,EAAE,WAAW;wBACrB,QAAQ,EAAE,ycAMP;wBACH,MAAM,EAAE,CAAC,EAAE,CAAC;qBACf;;;;QAWD,qBAAC;KAAA;;;;;;AC1BD;QAkBI;SAAiB;;;;QAEjB,uCAAQ;;;YAAR;aACC;;oBAhBJA,cAAS,SAAC;wBACP,QAAQ,EAAE,iBAAiB;wBAC3B,QAAQ,EAAE,8QAIP;wBACH,MAAM,EAAE,CAAC,EAAE,CAAC;qBACf;;;;QAUD,2BAAC;KAAA;;;;;;ACvBD;QAmBI;SAAiB;;;;QAEjB,kCAAQ;;;YAAR;aACC;;oBAjBJA,cAAS,SAAC;wBACP,QAAQ,EAAE,YAAY;wBACtB,QAAQ,EAAE,wPAKP;wBACH,MAAM,EAAE,CAAC,EAAE,CAAC;qBACf;;;;QAUD,sBAAC;KAAA;;;;;;ACxBD;QAgBI;SACC;;;;QAED,kCAAQ;;;YAAR;aACC;;oBAfJA,cAAS,SAAC;wBACP,QAAQ,EAAE,YAAY;wBACtB,QAAQ,EAAE,qHAEP;wBACH,MAAM,EAAE,CAAC,EAAE,CAAC;qBACf;;;;QAUD,sBAAC;KAAA;;;;;;ACrBD;QAkBI;SAAiB;;;;QAEjB,uCAAQ;;;YAAR;aACC;;;;;QAED,kDAAmB;;;;YAAnB,UAAoB,SAAiB;gBACjC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;aACvD;;oBApBJA,cAAS,SAAC;wBACP,QAAQ,EAAE,kBAAkB;wBAC5B,QAAQ,EAAE,+aAIP;wBACH,MAAM,EAAE,CAAC,4CAA4C,CAAC;qBACzD;;;;QAaD,2BAAC;KAAA;;;;;;AC1BD;QAYM,aAAa,GAAG;QAClB,KAAK,EAAE,cAAc;QACrB,MAAM,EAAE,eAAe;QACvB,WAAW,EAAE,oBAAoB;QACjC,QAAQ,EAAE,iBAAiB;QAC3B,WAAW,EAAE,oBAAoB;QACjC,MAAM,EAAE,eAAe;KAC1B;AAED;QASI,+BAAoB,QAAkC,EAAU,aAA+B;YAA3E,aAAQ,GAAR,QAAQ,CAA0B;YAAU,kBAAa,GAAb,aAAa,CAAkB;SAC9F;;;;QAED,wCAAQ;;;YAAR;;oBACU,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACrF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;gBAChE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;aACjD;;oBAjBJC,cAAS,SAAC;wBACP,QAAQ,EAAE,iBAAiB;qBAC9B;;;;;wBAvB0BC,6BAAwB;wBAAEC,qBAAgB;;;;4BAyBhEC,UAAK;4BACLA,UAAK;;QAcV,4BAAC;KAAA;;;;;;ACxCD;QAyBI,8BAAoB,EAAe;YAAf,OAAE,GAAF,EAAE,CAAa;YAV1B,WAAM,GAAY,EAAE,CAAC;YAEpB,WAAM,GAAsB,IAAIC,iBAAY,EAAO,CAAC;SAQtB;QAJxC,sBAAI,uCAAK;;;gBAAT;gBACI,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aAC1B;;;WAAA;;;;QAID,uCAAQ;;;YAAR;aACC;;;;QAED,0CAAW;;;YAAX;gBACI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;aACzC;;;;;QAED,uCAAQ;;;;YAAR,UAAS,KAAY;gBACjB,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACrC;qBAAM;oBACH,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACzC;aACJ;;;;QAED,iDAAkB;;;YAAlB;gBAAA,iBAWC;;oBAVS,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK;oBACrB,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ;wBAAE,OAAO;;wBAC9B,OAAO,GAAG,KAAI,CAAC,EAAE,CAAC,OAAO,CAC3B,KAAK,CAAC,KAAK,EACX,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,CAAC,CAChD;oBACD,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;iBACzC,CAAC,CAAC;gBACH,OAAO,KAAK,CAAC;aAChB;;;;;QAED,8CAAe;;;;YAAf,UAAgB,WAAgB;gBAC5B,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;;wBAClB,WAAS,GAAG,EAAE;oBACpB,WAAW,CAAC,OAAO,CAAC,UAAA,KAAK;wBACrB,WAAS,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;qBACnC,CAAC,CAAC;oBACH,OAAOC,gBAAU,CAAC,OAAO,CAAC,WAAS,CAAC,CAAC;iBACxC;gBACD,OAAO,IAAI,CAAC;aACf;;;;;QAED,oDAAqB;;;;YAArB,UAAsB,SAAoB;gBACtC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAA,KAAK;;wBACnC,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC;oBACpC,OAAO,CAAC,aAAa,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC7C,CAAC,CAAC;aACN;;oBApEJN,cAAS,SAAC;wBACP,QAAQ,EAAE,aAAa;wBACvB,QAAQ,EAAE,cAAc;wBACxB,QAAQ,EAAE,qNAGN;wBACJ,MAAM,EAAE,CAAC,EAAE,CAAC;qBACf;;;;;wBAZmBO,iBAAW;;;;6BAc1BH,UAAK;6BAELI,WAAM;;QAyDX,2BAAC;KAAA;;;;;;AC1ED;QAkBA;SA8B+B;;oBA9B9BC,aAAQ,SAAC;wBACN,OAAO,EAAE;4BACLC,6BAAa;4BACbC,iBAAW;4BACXC,yBAAmB;4BACnBC,gCAAiB;yBACpB;wBACD,YAAY,EAAE;4BACV,qBAAqB;4BACrB,iBAAiB;4BACjB,cAAc;4BACd,oBAAoB;4BACpB,eAAe;4BACf,eAAe;4BACf,oBAAoB;4BACpB,oBAAoB;yBACvB;wBACD,eAAe,EAAE;4BACb,cAAc;4BACd,eAAe;4BACf,iBAAiB;4BACjB,oBAAoB;4BACpB,oBAAoB;4BACpB,eAAe;yBAClB;wBACD,OAAO,EAAE;4BACL,qBAAqB;4BACrB,oBAAoB;yBACvB;qBACJ;;QAC6B,qBAAC;KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
