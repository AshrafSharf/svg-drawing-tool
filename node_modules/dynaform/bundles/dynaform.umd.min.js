!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/platform-browser"),require("ngx-color-picker")):"function"==typeof define&&define.amd?define("dynaform",["exports","@angular/core","@angular/forms","@angular/platform-browser","ngx-color-picker"],t):t(e.dynaform={},e.ng.core,e.ng.forms,e.ng.platformBrowser,null)}(this,function(e,t,o,n,r){"use strict";var i=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:t.Component,args:[{selector:"app-checkbox",template:'<div class="form-check" [formGroup]="group">\n    <input [formControlName]="field.name" type="checkbox" class="form-check-input mr-2" />\n    <label>{{field.label}}</label>\n</div>',styles:[""]}]}],e.ctorParameters=function(){return[]},e}(),l=function(){function e(){}return e.prototype.ngOnInit=function(){console.log("inputcomponent : ngoninit")},e.decorators=[{type:t.Component,args:[{selector:"app-input",template:'<div class="form-group" [formGroup]="group">\n    <label>{{field.label}}</label>\n    <input formControlName="{{field.name}}" [type]="field.inputType" class="form-control">\n    <ng-container *ngFor="let validation of field.validations;">\n        <div class="text-danger mt-2" *ngIf="group.get(field.name).invalid && (group.get(field.name).touched || group.get(field.name).dirty)">{{validation.message}}</div>\n    </ng-container>\n</div>',styles:[""]}]}],e.ctorParameters=function(){return[]},e}(),a=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:t.Component,args:[{selector:"app-radiobutton",template:'<div class="form-group" [formGroup]="group">\n    <ng-container *ngFor="let item of field.options">\n        <label class="radio-inline mr-2"><input type="radio" [formControlName]="field.name" [value]="item"> {{item}}</label>\n    </ng-container>\n</div>',styles:[""]}]}],e.ctorParameters=function(){return[]},e}(),c=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:t.Component,args:[{selector:"app-select",template:'<div [formGroup]="group">\n    <label>{{field.label}}</label>\n    <select class="form-control" [formControlName]="field.name">\n        <option [value]="item" *ngFor="let item of field.options"> {{item}}</option>\n    </select>\n</div>',styles:[""]}]}],e.ctorParameters=function(){return[]},e}(),u=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:t.Component,args:[{selector:"app-button",template:'<div>\n    <button class="btn btn-primary" [formGroup]="group" type="submit">{{field.label}}</button>\n</div>',styles:[""]}]}],e.ctorParameters=function(){return[]},e}(),p=function(){function e(){}return e.prototype.ngOnInit=function(){},e.prototype.onColorPickerChange=function(e){this.group.get(this.field.name).setValue(e)},e.decorators=[{type:t.Component,args:[{selector:"app-color-picker",template:'<div class="form-group" [formGroup]="group">\n    <label>{{field.label}}</label>\n    <input class="form-control color-text" [formControlName]="field.name" [value]="field.value" [(colorPicker)]="field.value" [style.background]="field.value" [cpOKButton]="true" [cpCancelButton]="true" [cpOutputFormat]="\'hex\'" [cpSaveClickOutside]="true"\n        (colorPickerChange)="onColorPickerChange($event)">\n</div>',styles:[".color-text{font-weight:bolder;color:#fff}"]}]}],e.ctorParameters=function(){return[]},e}(),s={input:l,select:c,radiobutton:a,checkbox:i,colorpicker:p,button:u},f=function(){function e(e,t){this.resolver=e,this.viewContainer=t}return e.prototype.ngOnInit=function(){var e=this.resolver.resolveComponentFactory(s[this.field.type]);this.componentRef=this.viewContainer.createComponent(e),this.componentRef.instance.field=this.field,this.componentRef.instance.group=this.group},e.decorators=[{type:t.Directive,args:[{selector:"[dynamic-field]"}]}],e.ctorParameters=function(){return[{type:t.ComponentFactoryResolver},{type:t.ViewContainerRef}]},e.propDecorators={field:[{type:t.Input}],group:[{type:t.Input}]},e}(),m=function(){function e(e){this.fb=e,this.fields=[],this.submit=new t.EventEmitter}return Object.defineProperty(e.prototype,"value",{get:function(){return this.form.value},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){},e.prototype.ngOnChanges=function(){this.form=this.createFormControls()},e.prototype.onSubmit=function(e){e.preventDefault(),e.stopPropagation(),this.form.valid?this.submit.emit(this.form.value):this.validateAllFormFields(this.form)},e.prototype.createFormControls=function(){var o=this,n=this.fb.group({});return this.fields.forEach(function(e){if("button"!==e.type){var t=o.fb.control(e.value,o.bindValidations(e.validations||[]));n.addControl(e.name,t)}}),n},e.prototype.bindValidations=function(e){if(0<e.length){var t=[];return e.forEach(function(e){t.push(e.validator)}),o.Validators.compose(t)}return null},e.prototype.validateAllFormFields=function(t){Object.keys(t.controls).forEach(function(e){t.get(e).markAsTouched({onlySelf:!0})})},e.decorators=[{type:t.Component,args:[{exportAs:"dynamicForm",selector:"dynamic-form",template:'<form class="dynamic-form" [formGroup]="form" (submit)="onSubmit($event)">\n    <ng-container *ngFor="let field of fields;" dynamic-field [field]="field" [group]="form">\n    </ng-container>\n</form>',styles:[""]}]}],e.ctorParameters=function(){return[{type:o.FormBuilder}]},e.propDecorators={fields:[{type:t.Input}],submit:[{type:t.Output}]},e}(),d=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[n.BrowserModule,o.FormsModule,o.ReactiveFormsModule,r.ColorPickerModule],declarations:[f,i,l,a,c,u,p,m],entryComponents:[l,c,i,a,p,u],exports:[f,m]}]}],e}();e.DynaformModule=d,e.CheckboxComponent=i,e.InputComponent=l,e.RadiobuttonComponent=a,e.SelectComponent=c,e.ColorPickerComponent=p,e.DynamicFieldDirective=f,e.DynamicFormComponent=m,e.Éµa=u,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=dynaform.umd.min.js.map