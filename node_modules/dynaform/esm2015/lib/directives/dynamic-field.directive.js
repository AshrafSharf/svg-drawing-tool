/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { InputComponent } from '../controls/input/input.component';
import { SelectComponent } from '../controls/select/select.component';
import { RadiobuttonComponent } from '../controls/radiobutton/radiobutton.component';
import { CheckboxComponent } from '../controls/checkbox/checkbox.component';
import { ColorPickerComponent } from '../controls/color-picker/color-picker.component';
import { ButtonComponent } from '../controls/button/button.component';
/** @type {?} */
const controlMapper = {
    input: InputComponent,
    select: SelectComponent,
    radiobutton: RadiobuttonComponent,
    checkbox: CheckboxComponent,
    colorpicker: ColorPickerComponent,
    button: ButtonComponent
};
export class DynamicFieldDirective {
    /**
     * @param {?} resolver
     * @param {?} viewContainer
     */
    constructor(resolver, viewContainer) {
        this.resolver = resolver;
        this.viewContainer = viewContainer;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        /** @type {?} */
        const factory = this.resolver.resolveComponentFactory(controlMapper[this.field.type]);
        this.componentRef = this.viewContainer.createComponent(factory);
        this.componentRef.instance.field = this.field;
        this.componentRef.instance.group = this.group;
    }
}
DynamicFieldDirective.decorators = [
    { type: Directive, args: [{
                selector: '[dynamic-field]'
            },] },
];
/** @nocollapse */
DynamicFieldDirective.ctorParameters = () => [
    { type: ComponentFactoryResolver },
    { type: ViewContainerRef }
];
DynamicFieldDirective.propDecorators = {
    field: [{ type: Input }],
    group: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    DynamicFieldDirective.prototype.field;
    /** @type {?} */
    DynamicFieldDirective.prototype.group;
    /** @type {?} */
    DynamicFieldDirective.prototype.componentRef;
    /**
     * @type {?}
     * @private
     */
    DynamicFieldDirective.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    DynamicFieldDirective.prototype.viewContainer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1maWVsZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9keW5hZm9ybS8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL2R5bmFtaWMtZmllbGQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSx3QkFBd0IsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFM0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUN0RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUNyRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUM1RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUN2RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUNBQXFDLENBQUM7O01BSWhFLGFBQWEsR0FBRztJQUNsQixLQUFLLEVBQUUsY0FBYztJQUNyQixNQUFNLEVBQUUsZUFBZTtJQUN2QixXQUFXLEVBQUUsb0JBQW9CO0lBQ2pDLFFBQVEsRUFBRSxpQkFBaUI7SUFDM0IsV0FBVyxFQUFFLG9CQUFvQjtJQUNqQyxNQUFNLEVBQUUsZUFBZTtDQUMxQjtBQUtELE1BQU0sT0FBTyxxQkFBcUI7Ozs7O0lBTTlCLFlBQW9CLFFBQWtDLEVBQVUsYUFBK0I7UUFBM0UsYUFBUSxHQUFSLFFBQVEsQ0FBMEI7UUFBVSxrQkFBYSxHQUFiLGFBQWEsQ0FBa0I7SUFDL0YsQ0FBQzs7OztJQUVELFFBQVE7O2NBQ0UsT0FBTyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsdUJBQXVCLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckYsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNoRSxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUM5QyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNsRCxDQUFDOzs7WUFqQkosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxpQkFBaUI7YUFDOUI7Ozs7WUF2QjBCLHdCQUF3QjtZQUFFLGdCQUFnQjs7O29CQXlCaEUsS0FBSztvQkFDTCxLQUFLOzs7O0lBRE4sc0NBQXNCOztJQUN0QixzQ0FBMEI7O0lBRTFCLDZDQUFrQjs7Ozs7SUFFTix5Q0FBMEM7Ozs7O0lBQUUsOENBQXVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmltcG9ydCB7IElucHV0Q29tcG9uZW50IH0gZnJvbSAnLi4vY29udHJvbHMvaW5wdXQvaW5wdXQuY29tcG9uZW50JztcbmltcG9ydCB7IFNlbGVjdENvbXBvbmVudCB9IGZyb20gJy4uL2NvbnRyb2xzL3NlbGVjdC9zZWxlY3QuY29tcG9uZW50JztcbmltcG9ydCB7IFJhZGlvYnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi4vY29udHJvbHMvcmFkaW9idXR0b24vcmFkaW9idXR0b24uY29tcG9uZW50JztcbmltcG9ydCB7IENoZWNrYm94Q29tcG9uZW50IH0gZnJvbSAnLi4vY29udHJvbHMvY2hlY2tib3gvY2hlY2tib3guY29tcG9uZW50JztcbmltcG9ydCB7IENvbG9yUGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi4vY29udHJvbHMvY29sb3ItcGlja2VyL2NvbG9yLXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi4vY29udHJvbHMvYnV0dG9uL2J1dHRvbi5jb21wb25lbnQnO1xuXG5pbXBvcnQgeyBGaWVsZCB9IGZyb20gJy4uL21vZGVsL2ZpZWxkLmludGVyZmFjZSc7XG5cbmNvbnN0IGNvbnRyb2xNYXBwZXIgPSB7XG4gICAgaW5wdXQ6IElucHV0Q29tcG9uZW50LFxuICAgIHNlbGVjdDogU2VsZWN0Q29tcG9uZW50LFxuICAgIHJhZGlvYnV0dG9uOiBSYWRpb2J1dHRvbkNvbXBvbmVudCxcbiAgICBjaGVja2JveDogQ2hlY2tib3hDb21wb25lbnQsXG4gICAgY29sb3JwaWNrZXI6IENvbG9yUGlja2VyQ29tcG9uZW50LFxuICAgIGJ1dHRvbjogQnV0dG9uQ29tcG9uZW50XG59O1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tkeW5hbWljLWZpZWxkXSdcbn0pXG5leHBvcnQgY2xhc3MgRHluYW1pY0ZpZWxkRGlyZWN0aXZlIHtcbiAgICBASW5wdXQoKSBmaWVsZDogRmllbGQ7XG4gICAgQElucHV0KCkgZ3JvdXA6IEZvcm1Hcm91cDtcblxuICAgIGNvbXBvbmVudFJlZjogYW55O1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSByZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBwcml2YXRlIHZpZXdDb250YWluZXI6IFZpZXdDb250YWluZXJSZWYpIHtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgY29uc3QgZmFjdG9yeSA9IHRoaXMucmVzb2x2ZXIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkoY29udHJvbE1hcHBlclt0aGlzLmZpZWxkLnR5cGVdKTtcbiAgICAgICAgdGhpcy5jb21wb25lbnRSZWYgPSB0aGlzLnZpZXdDb250YWluZXIuY3JlYXRlQ29tcG9uZW50KGZhY3RvcnkpO1xuICAgICAgICB0aGlzLmNvbXBvbmVudFJlZi5pbnN0YW5jZS5maWVsZCA9IHRoaXMuZmllbGQ7XG4gICAgICAgIHRoaXMuY29tcG9uZW50UmVmLmluc3RhbmNlLmdyb3VwID0gdGhpcy5ncm91cDtcbiAgICB9XG5cbn1cbiJdfQ==